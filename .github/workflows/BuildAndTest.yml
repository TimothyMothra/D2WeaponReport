# Github Workflow Syntax: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# .NET CLI Syntax: https://docs.microsoft.com/en-us/dotnet/core/tools
name: .NET Build And Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    env: # These variables are available to the entire job.
      SOLUTION: ./src/DestinySandbox.sln
      WEB_DIRECTORY: ./src/SandboxWeb
      TYPESCRIPT_EXPECTED_OUTPUT_FILENAME: ./src/SandboxWeb/wwwroot/scripts/app
    
    steps:
    - uses: actions/checkout@v2

#### SETUP NODE AND NPM

    - uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
        check-latest: true
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - run: npm install
      working-directory: ${{ env.WEB_DIRECTORY }}

    - run: npm run helloworld # verify npm is running "package.json"
      working-directory: ${{ env.WEB_DIRECTORY }}

      
#### SETUP DOTNET

    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Dotnet Restore Dependencies
      run: dotnet restore ${{ env.SOLUTION }} --use-lock-file

#### Build and Verify Output

    - name: Dotnet Build
      run: dotnet build  ${{ env.SOLUTION }} --no-restore

    - name: Verify Typescript Output
      shell: pwsh
      run: if (!(Test-Path -Path ${{ env.TYPESCRIPT_EXPECTED_OUTPUT_FILENAME }}.js -PathType Leaf)) { throw "Compiled Typescript Not Found .JS" }
       
    - name: Verify Typescript Output
      shell: pwsh
      run: if (!(Test-Path -Path ${{ env.TYPESCRIPT_EXPECTED_OUTPUT_FILENAME }}.js.map -PathType Leaf)) { throw "Compiled Typescript Not Found .JS.MAP" }
       
    - name: Verify Typescript Output
      shell: pwsh
      run: if (!(Test-Path -Path ${{ env.TYPESCRIPT_EXPECTED_OUTPUT_FILENAME }}.ts -PathType Leaf)) { throw "Compiled Typescript Not Found .TS" }
    
#### Verify Publish Output

    - name: dotnet publish
      run: dotnet publish ./src/SandboxWeb/SandboxWeb.csproj  -o ${{ github.workspace }}/root # -c Release

    - name: List files
      shell: pwsh
      run: Get-ChildItem '${{ github.workspace }}/root' -Recurse -Force | Write-Host

    - name: Verify Typescript Output
      shell: pwsh
      run: if (!(Test-Path -Path ${{ github.workspace }}/root/wwwroot/scripts/app.js -PathType Leaf)) { throw "Compiled Typescript Not Found .JS" }
       
    - name: Verify Typescript Output
      shell: pwsh
      run: if (!(Test-Path -Path ${{ github.workspace }}/root/wwwroot/scripts/app.js.map -PathType Leaf)) { throw "Compiled Typescript Not Found .JS.MAP" }
       
    - name: Verify Typescript Output
      shell: pwsh
      run: if (!(Test-Path -Path ${{ github.workspace }}/root/wwwroot/scripts/app.ts -PathType Leaf)) { throw "Compiled Typescript Not Found .TS" }

    # - name: Verify Typescript Output
    #   shell: pwsh
    #   run: |
    #     if (!(Test-Path -Path ./src/SandboxWeb/wwwroot/scripts/app.js -PathType Leaf)) { throw "Compiled Typescript Not Found .JS" }
    #     else if (!(Test-Path -Path ./src/SandboxWeb/wwwroot/scripts/app.js.map -PathType Leaf)) { throw "Compiled Typescript Not Found .JS.MAP" }
    #     else if (!(Test-Path -Path ./src/SandboxWeb/wwwroot/scripts/app.ts -PathType Leaf)) { throw "Compiled Typescript Not Found .TS" }

#### Run Tests

    - name: Dotnet Run Initialize Local Environment
      run: dotnet run --project ./src/InitEnvironment/InitEnvironment.csproj

    - name: Dotnet Test
      run: dotnet test  ${{ env.SOLUTION }} --no-build --verbosity normal
