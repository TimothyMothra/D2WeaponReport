# Syntax: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# .NET CLI Syntax: https://docs.microsoft.com/en-us/dotnet/core/tools
# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
name: Deployment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0/2 * * *' # Every 2 hours.

jobs:
  Init_Publish_Deploy:

    runs-on: ubuntu-latest

    env: # These variables are available to the entire job.
      SOLUTION: ./src/DestinySandbox.sln
      INIT_ENVIRONMENT_PROJECT: ./src/InitEnvironment/InitEnvironment.csproj
      WEB_PROJECT: ./src/D2WeaponReportWeb/D2WeaponReportWeb.csproj
      WEB_DIRECTORY: ./src/D2WeaponReportWeb
      TYPESCRIPT_EXPECTED_OUTPUT_FILENAME: /wwwroot/scripts/app # *.js, *.js.map, *.ts
      PUBLISH_DIRECTORY: ${{ github.workspace }}/publishroot

    steps:
    - uses: actions/checkout@v2

#### SETUP NODE AND NPM

    - uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
        check-latest: true
        #cache: 'npm'
        #cache-dependency-path: '**/package-lock.json'

    - run: npm install
      working-directory: ${{ env.WEB_DIRECTORY }}

    - run: npm run helloworld # verify npm is running
      working-directory: ${{ env.WEB_DIRECTORY }}

#### SETUP DOTNET

    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

###**************

    - name: Dotnet Restore Dependencies
      run: dotnet restore ${{ env.SOLUTION }} #--use-lock-file

#### Build and Verify Output

    - name: Dotnet Build
      run: dotnet build  ${{ env.SOLUTION }} --no-restore

#### Publish and Verify Output

    - name: Dotnet Run Initialize Local Environment
      run: dotnet run --project ${{ env.INIT_ENVIRONMENT_PROJECT }} -- ${{ env.PUBLISH_DIRECTORY }}

    - name: dotnet publish
      run: dotnet publish ${{ env.WEB_PROJECT }} -o ${{ env.PUBLISH_DIRECTORY }}

    - name: List files
      shell: pwsh
      run: Get-ChildItem '${{ env.PUBLISH_DIRECTORY }}' -Recurse -Force | Write-Host

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'D2WeaponReport'
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_EE9871C4B5CA43C4A27E18E0D106F33A }}
        package: ${{ env.PUBLISH_DIRECTORY }}

#************************
  #- name: Upload artifact for deployment job
  #  uses: actions/upload-artifact@v2
  #  with:
  #    name: .net-app
  #    path: ${{ env.PUBLISH_DIRECTORY }}
  #    retention-days: 1

#************************
  # - name: Download artifact from build job
  #   uses: actions/download-artifact@v2
  #   with:
  #     name: .net-app
